/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
    api libraries.mantisShaded
    testImplementation project(":mantis-server:mantis-server-worker-client")

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.testcontainers:testcontainers:1.18.3"

    testImplementation 'ch.qos.logback:logback-classic:1.3.8'

    testImplementation 'com.squareup.okhttp3:okhttp:latest.release'
}

tasks.register('writeVersion') {
    doLast {
        def propsFile = file("$buildDir/resources/test/version.properties")
        println "Writing version to ${propsFile.absolutePath}"
        propsFile.parentFile.mkdirs()
        propsFile.text = "version=$version"
        println "Version written: ${propsFile.text}"
    }
}

test.dependsOn writeVersion

// require following tasks to build container images.
test {
    dependsOn project(":mantis-source-jobs:mantis-source-job-publish").getTasksByName('mantisZipArtifact', false)
    dependsOn ':mantis-server:mantis-server-agent:dockerCreateDockerfile'
    dependsOn ':mantis-control-plane:mantis-control-plane-server:dockerCreateDockerfile'
}
