/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.gradle.test-retry' version '1.0.0'
}


ext {
    akkaVersion = '2.6.15'
    akkaHttpVersion = '10.2.7'
    fenzoVersion = '0.13.8'
    cliParserVersion = '1.1.1'
    configMagicVersion = '0.11'
    rxJavaReactiveStreamsVersion = '1.+'
    testngVersion = '6.+'
    scalaBinaryVersion = '2.12'
}

dependencies {
    implementation project(':mantis-control-plane:mantis-control-plane-core')
    implementation project(':mantis-control-plane:mantis-control-plane-server')

    implementation platform('software.amazon.awssdk:bom:2.23.15')
    implementation 'software.amazon.awssdk:dynamodb'
    implementation 'software.amazon.awssdk:aws-core'

    implementation libraries.vavr
    implementation libraries.spotifyFutures

    // todo: separate worker entrypoint and move this to testImplementation instead.
    implementation libraries.spectatorApi

    testImplementation libraries.junit4
    testImplementation libraries.mockitoCore3
    testImplementation "org.testng:testng:$testngVersion"
    testImplementation testFixtures(project(":mantis-common"))
    testImplementation testFixtures(project(":mantis-control-plane:mantis-control-plane-core"))
    testImplementation libraries.commonsIo
    testImplementation "com.amazonaws:DynamoDBLocal:1.25.0"
}
def installDir = file("${buildDir}/install")
def ci = System.getenv('GITHUB_ACTIONS')
def imageRepository = ci ? 'netflixoss' : 'localhost:5001/netflixoss'
def version = project.version

test {
    maxParallelForks = 1
    retry {
        failOnPassedAfterRetry = false
        maxFailures = 3
        maxRetries = 1
    }
}
