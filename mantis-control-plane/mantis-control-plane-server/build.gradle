/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'application'


dependencies {
    api project(':mantis-control-plane:mantis-control-plane-core')

    api libraries.akkaHttp
    api libraries.akkaStream
    api libraries.akkaSlf4j
    api libraries.akkaActor

    api libraries.rxJavaReactiveStreams
    api libraries.fenzoCore
    api libraries.fenzoTriggers
    api libraries.cliParser
    api libraries.configMagic

    // todo: separate worker entrypoint and move this to testImplementation instead.
    implementation libraries.spectatorApi

    testImplementation libraries.akkaTestkit
    testImplementation libraries.akkaHttpTestkit
    testImplementation libraries.junit4
    testImplementation libraries.mockitoCore3
    testImplementation libraries.testng
    testImplementation testFixtures(project(":mantis-common"))
    testImplementation testFixtures(project(":mantis-control-plane:mantis-control-plane-core"))
    testImplementation libraries.commonsIo
}

mainClassName = "io.mantisrx.server.master.MasterMain"

run {
    standardInput = System.in
}

test {
    maxParallelForks = 1
}