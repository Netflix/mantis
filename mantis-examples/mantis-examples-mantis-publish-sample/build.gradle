/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'

application {
    mainClassName = 'com.netflix.mantis.examples.mantispublishsample.Application'
}

ext {
    guiceVersion = '4.2.2'
    spectatorVersion = '0.96.0'
    archaiusVersion = 'latest.release'
    mockNeatVersion = '0.4.8'
}


dependencies {
    implementation project(":mantis-publish:mantis-publish-netty-guice")

    implementation libraries.rxJava
    implementation "com.netflix.spectator:spectator-ext-ipc:$spectatorVersion"
    implementation "com.netflix.archaius:archaius2-core:$archaiusVersion"
    implementation "com.netflix.archaius:archaius2-guice:$archaiusVersion"
    implementation "com.google.inject:guice:$guiceVersion"
    implementation "com.netflix.spectator:spectator-nflx-plugin:$spectatorVersion"
    implementation libraries.mockneat

    implementation libraries.slf4jLog4j12
}

def installDir = file("${buildDir}/install")
def resourcesDir = file("${buildDir}/resources")
def ci = System.getenv('GITHUB_ACTIONS')
def imageRepository = ci ? 'netflixoss' : 'localhost:5001/netflixoss'

docker {
    dockerSyncBuildContext {
        from installDir
        from resourcesDir
    }

    dockerCreateDockerfile {
        // root directory to store all the files
        instruction 'WORKDIR /apps/mantis/mantis-publisher-sample'
        // copy the files from the build context to the image
        instruction 'COPY mantis-examples-mantis-publish-sample/bin/* /apps/mantis/mantis-publisher-sample/bin/'
        instruction 'COPY mantis-examples-mantis-publish-sample/lib/* /apps/mantis/mantis-publisher-sample/lib/'
        instruction 'COPY resources/* conf/'
        entryPoint 'bin/mantis-examples-mantis-publish-sample', '-p', 'application.properties'
    }

    javaApplication {
        baseImage = 'azul/zulu-openjdk:8-latest'
        maintainer = 'Mantis Developers "mantis-oss-dev@netflix.com"'
        mainClassName = 'com.netflix.mantis.examples.mantispublishsample.Application'
        images = ["$imageRepository/mantis-publisher-sample:latest"]
    }
}

dockerSyncBuildContext.dependsOn(installDist)
