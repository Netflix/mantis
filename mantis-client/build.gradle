/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
    implementation project(':mantis-runtime')
    implementation project(":mantis-control-plane:mantis-control-plane-client")
    implementation project(':mantis-server:mantis-server-worker-client')

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    testImplementation "junit:junit-dep:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

task runsubmit(type: JavaExec) {
    description = 'Runs Sample Mantis Client to submit a job'
    classpath sourceSets.main.runtimeClasspath
    main 'io.mantisrx.client.examples.SampleClient'
    if (System.properties['propfile'] != null && System.properties['jobname'] != null) {
        args '-c', 'submit', '-p', System.properties['propfile'], '-n', System.properties['jobname']
    }
}

task runsinkconnect(type: JavaExec) {
    description = 'Runs Sample Mantis Client to connect to a job sink'
    classpath sourceSets.main.runtimeClasspath
    main 'io.mantisrx.client.examples.SampleClient'
    if (System.properties['propfile'] != null && System.properties['jobid'] != null) {
        args '-c', 'sink', '-p', System.properties['propfile'], '-j', System.properties['jobid']
    }
}

task createjob(type: JavaExec) {
    description = 'Runs sample mantis client to create new job cluster'
    classpath = sourceSets.main.runtimeClasspath
    main 'io.mantisrx.client.examples.SampleClient'
    if (System.properties['propfile'] != null && System.properties['jobname'] != null && System.properties['joburl'] != null) {
        args '-c', 'create', '-p', System.properties['propfile'], '-n', System.properties['jobname'], '-u', System.properties['joburl']
    }
}

task updatejob(type: JavaExec) {
    description = 'Runs sample mantis client to update existing job cluster'
    classpath = sourceSets.main.runtimeClasspath
    main 'io.mantisrx.client.examples.SampleClient'
    if (System.properties['propfile'] != null && System.properties['jobname'] != null && System.properties['joburl'] != null) {
        args '-c', 'update', '-p', System.properties['propfile'], '-n', System.properties['jobname'], '-u', System.properties['joburl']
    }
}
