/*
 * Copyright 2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-netflixoss-project-plugin:9.4.2'
        classpath 'io.mantisrx:mantis-gradle-plugin:1.2.+'
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

ext {
    versionRxNetty = '0.4.19'
    versionSuffixRxNettyShaded = '1'
    versionIoNetty = '4.1.5.Final'
    versionSlf4j = '1.7.0'
    versionRxJava = '1.3.8'

    junitVersion = '4.11'
    mockitoVersion = '1.9.+'
    slf4jVersion = '1.7.+'
    vavrVersion = '0.9.2'
}

allprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'

    group = 'io.mantisrx'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    if (project.hasProperty('useMavenLocal')) {
        repositories {
            mavenLocal()
        }
    }

    repositories {
        mavenCentral()
        /**
         * This repository locates artifacts that don't exist in maven central but we had to backup from jcenter
         * The exclusiveContent 
         */
        exclusiveContent {
            forRepository {
                maven {
                    url "https://artifactory-oss.prod.netflix.net/artifactory/required-jcenter-modules-backup"
                }
            }
            filter {
                includeGroupByRegex "net\\.andreinc.*"
            }
        }
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

apply from: file('gradle/check.gradle')
