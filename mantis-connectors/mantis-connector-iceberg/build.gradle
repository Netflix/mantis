/*
 * Copyright 2020 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'mantis'


dependencies {
    configurations {
        // we need parquet dependency to be present in testing classpath.
        // hence we need to extend from shadow configuration
        testImplementation.extendsFrom shadow
        all {
            // we want a parquet version above 1.12.0 because we need this fix
            // https://issues.apache.org/jira/browse/PARQUET-1851
            resolutionStrategy {
                force libraries.parquetHadoop
            }
        }
    }
    implementation project(":mantis-runtime")
    implementation libraries.slf4jApi

    // We only need the Configuration interface. Users can bring their own hadoop-common version.
    shadow libraries.hadoopCommon

    // Exclude in case there are differences in SHAs between 0.7.0 incubation versions.
    shadow libraries.icebergApi
    shadow libraries.icebergCore
    shadow libraries.icebergData
    shadow libraries.icebergParquet
    shadow libraries.avro
    shadow libraries.parquetHadoop

    // We only need this for local mains(). Users bring their own implementation.
    shadow libraries.slf4jLog4j12

    testImplementation project(":mantis-runtime").sourceSets.test.output
    testImplementation libraries.hadoopCommon
    testImplementation libraries.icebergData 
    testImplementation libraries.junitJupiter
    testImplementation libraries.mockitoCore
    testImplementation libraries.spectatorApi
    testImplementation libraries.slf4jLog4j12
}

tasks.jar.dependsOn tasks.shadowJar

test {
    useJUnitPlatform()
}

shadowJar {
    classifier = null
    dependencies {
        exclude dependency("com.netflix.spectator:spectator-api")
    }

    // include the LICENSE and NOTICE files for the shaded Jar
    from(projectDir) {
        include 'LICENSE'
        include 'NOTICE'
    }
}

jar {
    enabled = false
}
jar.dependsOn(shadowJar)

afterEvaluate {
    publishing {
        publications {
            // to remove shaded dependency from pom.xml
            withType(MavenPublication) {
                pom.withXml {
                    asNode()
                            .dependencies
                            .dependency
                            .findAll {
                                ['hadoop-common',
                                 'iceberg-core',
                                 'iceberg-data',
                                 'iceberg-parquet'
                                ].contains(it.artifactId.text())
                            }
                            .each { it.parent().remove(it) }
                }
            }
        }
    }
}
