/*
 * Copyright 2020 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'mantis'

ext {
    hadoopVersion = '2.7.3'
    icebergVersion = '0.9.+'
    junitVersion = '5.3.+'
    mockitoVersion = '2.18.+'
}

dependencies {
    implementation project(":mantis-runtime")

    // We only need the Configuration interface. Users can bring their own hadoop-common version.
    shadow "org.apache.hadoop:hadoop-common:$hadoopVersion"

    // Exclude in case there are differences in SHAs between 0.7.0 incubation versions.
    shadow "org.apache.iceberg:iceberg-api:$icebergVersion"
    shadow "org.apache.iceberg:iceberg-core:$icebergVersion"
    shadow "org.apache.iceberg:iceberg-data:$icebergVersion"
    shadow "org.apache.iceberg:iceberg-parquet:$icebergVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    // We only need this for local mains(). Users bring their own implementation.
    shadow "org.slf4j:slf4j-log4j12:$slf4jVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    testImplementation "org.apache.hadoop:hadoop-common:$hadoopVersion"
    testImplementation "org.apache.iceberg:iceberg-data:$icebergVersion"
    testImplementation "org.slf4j:slf4j-log4j12:$slf4jVersion"
}

tasks.jar.dependsOn tasks.shadowJar

test {
    useJUnitPlatform()
}

shadowJar {
    classifier = null
    dependencies {
        exclude dependency("com.netflix.spectator:spectator-api")
    }

    // include the LICENSE and NOTICE files for the shaded Jar
    from(projectDir) {
        include 'LICENSE'
        include 'NOTICE'
    }
}

jar {
    enabled = false
}
jar.dependsOn(shadowJar)

afterEvaluate {
    publishing {
        publications {
            // to remove shaded dependency from pom.xml
            withType(MavenPublication) {
                pom.withXml {
                    asNode()
                        .dependencies
                        .dependency
                        .findAll {
                            ['hadoop-common',
                             'iceberg-core',
                             'iceberg-data',
                             'iceberg-parquet'
                            ].contains(it.artifactId.text())
                        }
                        .each { it.parent().remove(it) }
                }
            }
        }
    }
}