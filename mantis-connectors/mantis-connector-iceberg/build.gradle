/*
 * Copyright 2020 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
ext {
    hadoopVersion = '2.7.3'
    icebergVersion = '0.14.+'
    avroVersion = '1.10.2'
    parquetVersion = '1.12.0'
}

dependencies {
    configurations {
        // we need parquet dependency to be present in testing classpath.
        // hence we need to extend from shadow configuration
        testImplementation.extendsFrom compileOnly
        all {
            // we want a parquet version above 1.12.0 because we need this fix
            // https://issues.apache.org/jira/browse/PARQUET-1851
            resolutionStrategy {
                force "org.apache.parquet:parquet-hadoop:${parquetVersion}"
            }
        }
    }
    api project(":mantis-runtime")
    implementation libraries.slf4jApi

    // We only need the Configuration interface.
    api "org.apache.hadoop:hadoop-common:$hadoopVersion"

    // Exclude in case there are differences in SHAs between 0.7.0 incubation versions.
    compileOnly "org.apache.iceberg:iceberg-api:$icebergVersion"
    compileOnly "org.apache.iceberg:iceberg-core:$icebergVersion"
    compileOnly "org.apache.iceberg:iceberg-data:$icebergVersion"
    compileOnly "org.apache.iceberg:iceberg-parquet:$icebergVersion"
    compileOnly "org.apache.avro:avro:$avroVersion"
    compileOnly "org.apache.parquet:parquet-hadoop:${parquetVersion}"

    testImplementation project(":mantis-runtime").sourceSets.test.output
    testImplementation libraries.junitJupiter
    testImplementation libraries.mockitoCore
    testImplementation libraries.spectatorApi
    testImplementation libraries.slf4jLog4j12
}

test {
    useJUnitPlatform()
}
