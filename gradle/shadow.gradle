/*
 * Copyright 2020 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

project(":mantis-connectors:mantis-connector-iceberg") {
    shadowJar {
        classifier = null
        dependencies {
            exclude dependency("com.netflix.spectator:spectator-api")
        }

        // include the LICENSE and NOTICE files for the shaded Jar
        from(projectDir) {
            include 'LICENSE'
            include 'NOTICE'
        }
    }

    jar {
        enabled = false
    }
    jar.dependsOn(shadowJar)

    afterEvaluate {
        publishing {
            publications {
                // to remove shaded dependency from pom.xml
                withType(MavenPublication) {
                    pom.withXml {
                        asNode()
                            .dependencies
                            .dependency
                            .findAll {
                                ['hadoop-common',
                                 'iceberg-core',
                                 'iceberg-data',
                                 'iceberg-parquet'
                                ].contains(it.artifactId.text())
                            }
                            .each { it.parent().remove(it) }
                    }
                }
            }
        }
    }
}

project(":mantis-publish:mantis-publish-netty") {
    shadowJar {
        classifier = null
        relocate('com.fasterxml', 'io.mantisrx.shaded.com.fasterxml')
        relocate('io.netty', 'io.mantisrx.shaded.io.netty')
        relocate('META-INF/native/libnetty', 'META-INF/native/libio_mantisrx_shaded_netty')
        relocate('META-INF/native/netty', 'META-INF/native/io_mantisrx_shaded_netty')
        exclude('com.netflix.spectator.*')
        dependencies {
          exclude(dependency('com.netflix.spectator:.*:.*'))
        }
    }

    jar {
        enabled = false
    }
    jar.dependsOn(shadowJar)

    afterEvaluate {
        publishing {
            publications {
                // to remove shaded dependency from pom.xml
                withType(MavenPublication) {
                    pom.withXml {
                        asNode()
                            .dependencies
                            .dependency
                            .findAll {
                                ['jackson-databind',
                                 'jackson-datatype-jdk8',
                                 'netty-all',
                                ].contains(it.artifactId.text())
                            }
                            .each { it.parent().remove(it) }
                    }
                }
            }
        }
    }
}